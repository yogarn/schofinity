openapi: 3.0.0
info:
  title: Schofinity API
  description: |
    To use this API you need to obtain a JWT Token by logging in and entering it on the authorization button below. You can register as a new user with your own credentials.

  version: 1.0.0
servers:
  - url: https://schofinity-c284f28bf9dd.herokuapp.com/v1/
    description: Main sever
  - url: http://localhost:3000/v1/
    description: Development sever
tags:
  - name: Authentications
    description: Operations related to users authentication
  - name: Users
    description: Operations related to users managements
  - name: Scholarships
    description: Operations related to scholarships managements
  - name: Favorites
    description: Operations related to favorites managements
  - name: Mentors
    description: Operations related to mentors managements
  - name: Mentor Schedule
    description: Operations related to mentor schedules
  - name: Mentorings
    description: Operations related to mentorings
  - name: Classes
    description: Operations related to online classes
  - name: Class Resources
    description: Operations related to class resources
  - name: Feedbacks
    description: Operations related to feedbacks
  - name: Admins
    description: Operations related to administrator
security:
  - bearerAuth: []

paths:
  # authentication section
  /auths:
    post:
      security: []
      tags:
        - Authentications
      summary: Generate a JWT token
      description: Authenticate and grant access based on user credentials. Return user login status along with its detail and token as response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: yogarn
                password:
                  type: string
                  example: Root_123
      responses:
        "200":
          description: A JSON object of user login status and JWT token. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiMDYxYzY0YzQtZWZmNC00MDA3LThhYmItMDE0OTliYTNjZDU5IiwidXNlcm5hbWUiOiJ5b2dhcm4iLCJwYXNzd29yZCI6IiQyYiQxMCRHdjc0V0JqL2s1Q0dnSzBmRVBCM3ZlWFYyUHBDWkJkLjdUaUVjaWFMLmFFWTFLN2h5TnVnNiIsIm5hbWUiOiJZb2dhIFJhZGl0eWEgTmFsYSIsImNvbnRhY3QiOiIrNjI4NTE1OTU1MTg1OSIsImVtYWlsIjoieW9nYXJhZGl0eWFuQGdtYWlsLmNvbSIsImltYWdlIjpudWxsLCJyb2xlSWQiOjEsInN0YXR1c0lkIjoyLCJvdHAiOm51bGwsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMTRUMDM6MzI6MDEuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjQtMDMtMTRUMDM6MzI6MzYuMDAwWiJ9LCJpYXQiOjE3MTAzODczODMsImV4cCI6MTcxMDM5MDk4M30.PLFCqxQKM0cgCkgYiQFSQlzHKgx473gjBRZJ3Mxfvas
        "401":
          description: Incorrect credentials (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Incorrect password
        "404":
          description: Credentials not found (Not Found Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Username not found
  /auths/activate:
    post:
      security: []
      tags:
        - Authentications
      summary: Activate user account
      description: Authenticate user OTP and activate account based on user credentials. Return account activation status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - otp
              properties:
                username:
                  type: string
                  example: yogarn
                otp:
                  type: string
                  example: 123456
      responses:
        "200":
          description: A JSON object of account activation status. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        "401":
          description: Incorrect OTP (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Incorrect OTP
        "404":
          description: Credentials not found (Not Found Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Username not found
  /auths/generate-otp:
    post:
      security: []
      tags:
        - Authentications
      summary: Send OTP code to user by email
      description: Send OTP code for resetting password and account activation based on user credentials. Return OTP send status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  example: yogarn
      responses:
        "200":
          description: A JSON object of OTP send status. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        "404":
          description: Credentials not found (Not Found Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Username not found
  /auths/reset-password:
    post:
      security: []
      tags:
        - Authentications
      summary: Authenticate OTP and resetting password
      description: Authenticate OTP and resetting password based on user credentials. Return reset password status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - otp
              properties:
                username:
                  type: string
                  example: yogarn
                password:
                  type: string
                  example: Root_123
                otp:
                  type: string
                  example: 123456
      responses:
        "200":
          description: A JSON object of OTP send status. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
        "401":
          description: Incorrect OTP (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Incorrect OTP
        "404":
          description: Credentials not found (Not Found Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Username not found

  # users section
  /users:
    post:
      security: []
      tags:
        - Users
      summary: Register a new user to the system
      description: Record user credentials and return it's username. Only the username and password key-value pair are required. If user leave other key empty, their values ​​will be stored as null, which user can edit later.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - username
                - password
                - email
              properties:
                name:
                  $ref: "#/components/schemas/user/properties/name"
                username:
                  $ref: "#/components/schemas/user/properties/username"
                password:
                  $ref: "#/components/schemas/user/properties/password"
                contact:
                  $ref: "#/components/schemas/user/properties/contact"
                email:
                  $ref: "#/components/schemas/user/properties/email"
                description:
                  $ref: "#/components/schemas/user/properties/description"
                birthDate:
                  $ref: "#/components/schemas/user/properties/birthDate"
                gender:
                  $ref: "#/components/schemas/user/properties/gender"
                address:
                  $ref: "#/components/schemas/user/properties/address"
                image:
                  $ref: "#/components/schemas/user/properties/image"
      responses:
        "200":
          description: A JSON object of user registration status and its username. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        $ref: "#/components/schemas/user/properties/id"
                      roleId:
                        $ref: "#/components/schemas/user/properties/roleId"
                      statusId:
                        $ref: "#/components/schemas/user/properties/statusId"
                      name:
                        $ref: "#/components/schemas/user/properties/name"
                      username:
                        $ref: "#/components/schemas/user/properties/username"
                      password:
                        $ref: "#/components/schemas/user/properties/password"
                      contact:
                        $ref: "#/components/schemas/user/properties/contact"
                      email:
                        $ref: "#/components/schemas/user/properties/email"
                      image:
                        $ref: "#/components/schemas/user/properties/image"
                      createdAt:
                        $ref: "#/components/schemas/user/properties/createdAt"
                      updatedAt:
                        $ref: "#/components/schemas/user/properties/updatedAt"
              example:
                message: success
                data:
                  id: 3c71e4a6-a4e9-462f-b1ea-cc98fc37ec46
                  roleId: 1
                  statusId: 1
                  username: yogarn
                  name: Yoga Raditya
                  password: $2b$10$TV1VuPMVxS0tE3zKlUslNOa6nBCAmULsvDjBM0ZD8PjxUXOPzTg1O
                  contact: 6285123456789
                  email: schofinity@gmail.com
                  image: profile_picture.jpeg
                  updatedAt: 2024-03-17T00:06:21.363Z
                  createdAt: 2024-03-17T00:06:21.363Z
        "409":
          description: Username already used by another user (Conflict Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Validation error
    get:
      summary: View users profile
      description: Returns a list of users along with its details. User can use it without parameter to view all users profile.
      tags:
        - Users
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: The id of the user.
          required: false
          example: 1
        - in: query
          name: name
          schema:
            type: string
          description: The name of the user.
          required: false
          example: Yoga Raditya
        - in: query
          name: username
          schema:
            type: string
          description: The username of the user.
          required: false
          example: yogarn
        - in: query
          name: email
          schema:
            type: string
          description: The email of the user.
          required: false
          example: schofinity@gmail.com
        - in: query
          name: statusId
          schema:
            type: string
          description: The status's id of the user.
          required: false
          example: 2
        - in: query
          name: limit
          schema:
            type: string
          description: The limit of user information that will be shown.
          required: false
          example: 10
        - in: query
          name: page
          schema:
            type: string
          description: The page of user information that will be shown.
          required: false
          example: 1
        - in: query
          name: sort
          schema:
            type: string
          description: The name of attributes that will be sorted.
          required: false
          example: name
      responses:
        "200":
          description: A JSON array containing list of users. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        username:
                          type: string
                        contact:
                          type: string
                        email:
                          type: string
                          format: email
                        description:
                          type: string
                        birthDate:
                          type: string
                        gender:
                          type: string
                        address:
                          type: string
                        image:
                          type: string
                        roleId:
                          type: integer
                        statusId:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        userStatus:
                          type: object
                        userRole:
                          type: object
              examples:
                Empty Params:
                  value:
                    message: success
                    data:
                      - id: 061c64c4-eff4-4007-8abb-01499ba3cd59
                        username: yogarn
                        name: Yoga Raditya
                        contact: 6285123456789
                        email: schofinity@gmail.com
                        description: Undergraduate Computer Science Students
                        birthDate: 2024-01-01
                        gender: male
                        address: 10th Downing Street
                        image: yogarn-profile.jpeg
                        roleId: 2
                        statusId: 2
                        createdAt: 2024-03-14T03:32:01.000Z
                        updatedAt: 2024-03-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 2,
                          roleName: mentor
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                      - id: 13071c6e-0d91-4372-bd05-84fcecd1fe75
                        username: johndoe
                        name: John Doe
                        contact: 6285123456789
                        email: johndoe@gmail.com
                        description: Example of Computer Science Students
                        birthDate: 2024-01-01
                        gender: else
                        address: 10th Downing Street
                        image: johndoe-profile.jpeg
                        roleId: 1
                        statusId: 2
                        createdAt: 2024-02-14T03:32:01.000Z
                        updatedAt: 2024-02-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 1,
                          roleName: user
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                      - id: 45842f85-2517-4f0a-b160-810452274033
                        username: alanturing
                        name: Alan Turing
                        contact: 6285123456789
                        email: turing@gmail.com
                        description: Pioneer of Computer Science
                        birthDate: 2024-01-01
                        gender: male
                        address: London W9 1ER, City of Westminster
                        image: alanturing-profile.jpeg
                        roleId: 2
                        statusId: 2
                        createdAt: 2024-01-14T03:32:01.000Z
                        updatedAt: 2024-01-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 2,
                          roleName: mentor
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                Using id, username, or email:
                  value:
                    message: success
                    data:
                      - id: 061c64c4-eff4-4007-8abb-01499ba3cd59
                        username: yogarn
                        name: Yoga Raditya
                        contact: 6285123456789
                        email: schofinity@gmail.com
                        description: Undergraduate Computer Science Students
                        birthDate: 2024-01-01
                        gender: male
                        address: 10th Downing Street
                        image: yogarn-profile.jpeg
                        roleId: 2
                        statusId: 2
                        createdAt: 2024-03-14T03:32:01.000Z
                        updatedAt: 2024-03-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 2,
                          roleName: mentor
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                Using name or statusId:
                  value:
                    message: success
                    data:
                      - id: 061c64c4-eff4-4007-8abb-01499ba3cd59
                        username: yogarn
                        name: Yoga Raditya
                        contact: 6285123456789
                        email: schofinity@gmail.com
                        description: Undergraduate Computer Science Students
                        birthDate: 2024-01-01
                        gender: male
                        address: 10th Downing Street
                        image: yogarn-profile.jpeg
                        roleId: 2
                        statusId: 2
                        createdAt: 2024-03-14T03:32:01.000Z
                        updatedAt: 2024-03-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 2,
                          roleName: mentor
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                      - id: 45842f85-2517-4f0a-b160-810452274033
                        username: alanturing
                        name: Alan Turing
                        contact: 6285123456789
                        email: turing@gmail.com
                        description: Pioneer of Computer Science
                        birthDate: 2024-01-01
                        gender: male
                        address: London W9 1ER, City of Westminster
                        image: alanturing-profile.jpeg
                        roleId: 2
                        statusId: 2
                        createdAt: 2024-01-14T03:32:01.000Z
                        updatedAt: 2024-01-14T05:24:58.000Z
                        userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                        userRole:
                          id: 2,
                          roleName: mentor
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
    patch:
      tags:
        - Users
      summary: Update user profile.
      description: Update user profile with new details and return the update status. User don't need to send all the key-value pair when accessing this request. All key-value are editable, except id, and status (only available for admin).
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/user/properties/name"
                username:
                  $ref: "#/components/schemas/user/properties/username"
                password:
                  $ref: "#/components/schemas/user/properties/password"
                contact:
                  $ref: "#/components/schemas/user/properties/contact"
                email:
                  $ref: "#/components/schemas/user/properties/email"
                description:
                  $ref: "#/components/schemas/user/properties/description"
                birthDate:
                  $ref: "#/components/schemas/user/properties/birthDate"
                gender:
                  $ref: "#/components/schemas/user/properties/gender"
                address:
                  $ref: "#/components/schemas/user/properties/address"
                image:
                  $ref: "#/components/schemas/user/properties/image"
      responses:
        "200":
          description: A JSON object of user registration status and its username. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        $ref: "#/components/schemas/user/properties/name"
                      username:
                        $ref: "#/components/schemas/user/properties/username"
                      password:
                        $ref: "#/components/schemas/user/properties/password"
                      contact:
                        $ref: "#/components/schemas/user/properties/contact"
                      email:
                        $ref: "#/components/schemas/user/properties/email"
                      description:
                        $ref: "#/components/schemas/user/properties/description"
                      birthDate:
                        $ref: "#/components/schemas/user/properties/birthDate"
                      gender:
                        $ref: "#/components/schemas/user/properties/gender"
                      address:
                        $ref: "#/components/schemas/user/properties/address"
                      image:
                        $ref: "#/components/schemas/user/properties/image"
              example:
                message: success
                data:
                  name: Yoga Raditya
                  username: yogarn
                  password: Root_123
                  contact: 6285123456789
                  email: schofinity@gmail.com
                  description: Undergraduate Computer Science Students
                  birthDate: 2024-01-01
                  image: profile_picture.jpeg
  /users/{id}:
    get:
      summary: View users profile by id
      description: Returns a users along with its details.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique identifier of the user to get
      tags:
        - Users
      responses:
        "200":
          description: A JSON object containing user details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      username:
                        type: string
                      contact:
                        type: string
                      email:
                        type: string
                        format: email
                      description:
                        type: string
                      birthDate:
                        type: string
                      gender:
                        type: string
                      address:
                        type: string
                      image:
                        type: string
                      roleId:
                        type: integer
                      statusId:
                        type: integer
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      userStatus:
                        type: object
                      userRole:
                        type: object
              example:
                message: success
                data:
                  id: 061c64c4-eff4-4007-8abb-01499ba3cd59
                  username: yogarn
                  name: Yoga Raditya
                  contact: 6285123456789
                  email: schofinity@gmail.com
                  description: Undergraduate Computer Science Students
                  birthDate: 2024-01-01
                  gender: male
                  address: 10th Downing Street
                  image: yogarn-profile.jpeg
                  roleId: 2
                  statusId: 2
                  createdAt: 2024-03-14T03:32:01.000Z
                  updatedAt: 2024-03-14T05:24:58.000Z
                  userStatus:
                          id: 2,
                          statusName: success
                          createdAt: 2024-03-16T07:29:17.000Z
                          updatedAt: 2024-03-16T07:29:17.000Z
                  userRole:
                    id: 2,
                    roleName: mentor
                    createdAt: 2024-03-16T07:29:17.000Z
                    updatedAt: 2024-03-16T07:29:17.000Z
    delete:
      summary: Delete user by id
      description: Returns user deletion status.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique identifier of the user to delete
      tags:
        - Users
        - Admins
      responses:
        "200":
          description: A JSON object containing user details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      userId:
                        $ref: "#/components/schemas/user/properties/id"
              example:
                message: success
                data:
                  userId: 3c71e4a6-a4e9-462f-b1ea-cc98fc37ec46
        "401":
          description: Insufficient privilege (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Insufficient privilege
  /users/{id}/admin:
    post:
      summary: Promote user to admin by user's id
      description: Returns a promotion status along with its details.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique identifier of the user to promote
      tags:
        - Users
        - Admins
      responses:
        "200":
          description: A JSON object containing user details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      userId:
                        $ref: "#/components/schemas/user/properties/id"
                      roleId:
                        $ref: "#/components/schemas/user/properties/roleId"
              example:
                message: success
                data:
                  userId: 3c71e4a6-a4e9-462f-b1ea-cc98fc37ec46
                  roleId: 3
        "401":
          description: Insufficient privilege (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Insufficient privilege

  # scholarships section
  /scholarships:
    post:
      tags:
        - Scholarships
      summary: Add a new scholarship
      description: Record scholarship and return it's details.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - benefit
                - requirement
                - link
                - startDate
                - endDate
                - company
                - educations
                - typeId
                - locations
                - categories
              properties:
                name:
                  $ref: "#/components/schemas/scholarship/properties/name"
                description:
                  $ref: "#/components/schemas/scholarship/properties/description"
                company:
                  $ref: "#/components/schemas/scholarship/properties/company"
                image:
                  $ref: "#/components/schemas/scholarship/properties/image"
                benefit:
                  $ref: "#/components/schemas/scholarship/properties/benefit"
                requirement:
                  $ref: "#/components/schemas/scholarship/properties/requirement"
                link:
                  $ref: "#/components/schemas/scholarship/properties/link"
                startDate:
                  $ref: "#/components/schemas/scholarship/properties/startDate"
                endDate:
                  $ref: "#/components/schemas/scholarship/properties/endDate"
                educations:
                  $ref: "#/components/schemas/scholarship/properties/educations"
                typeId:
                  $ref: "#/components/schemas/scholarship/properties/typeId"
                locations:
                  $ref: "#/components/schemas/scholarship/properties/locations"
                categories:
                  $ref: "#/components/schemas/scholarship/properties/categories"
      responses:
        "200":
          description: A JSON object containing user details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        $ref: "#/components/schemas/scholarship/properties/id"
                      statusId:
                        $ref: "#/components/schemas/scholarship/properties/statusId"
                      userId:
                        $ref: "#/components/schemas/scholarship/properties/userId"
                      name:
                        $ref: "#/components/schemas/scholarship/properties/name"
                      description:
                        $ref: "#/components/schemas/scholarship/properties/description"
                      company:
                        $ref: "#/components/schemas/scholarship/properties/company"
                      image:
                        $ref: "#/components/schemas/scholarship/properties/image"
                      benefit:
                        $ref: "#/components/schemas/scholarship/properties/benefit"
                      requirement:
                        $ref: "#/components/schemas/scholarship/properties/requirement"
                      link:
                        $ref: "#/components/schemas/scholarship/properties/link"
                      startDate:
                        $ref: "#/components/schemas/scholarship/properties/startDate"
                      endDate:
                        $ref: "#/components/schemas/scholarship/properties/endDate"
                      typeId:
                        $ref: "#/components/schemas/scholarship/properties/typeId"
                      createdAt:
                        $ref: "#/components/schemas/scholarship/properties/createdAt"
                      updatedAt:
                        $ref: "#/components/schemas/scholarship/properties/updatedAt"
              example:
                id: 4d90fff9-52fd-47a4-89cd-dc0fb57b926c
                statusId: 1,
                userId: af6f1a53-fd33-40b9-be41-72ba9d373195
                name: Beasiswa Reguler LPDP
                description: Beasiswa Reguler LPDP merupakan program beasiswa yang didanai oleh Lembaga Pengelola Dana Pendidikan (LPDP) Kementerian Keuangan Republik Indoneisa untuk jenjang magister dan doktor.
                company: Kementerian Keuangan Republik Indonesia
                image: lpdp.jpeg
                benefit: Biaya Pendidikan, Biaya Hidup, Tunjangan Buku, Tunjangan Penelitian
                requirement: WNI, Lulus S1/D4, IPK Minimal 3.00, Skor TOEFL Minimal 500, Surat Rekomendasi, Sehat Jasmani dan Rohani
                link: lpdp.kemenkeu.go.id
                startDate: 2024-12-01T00:00:00.000Z
                endDate: 2024-12-10T00:00:00.000Z
                typeId: 1
                updatedAt: 2024-03-16T23:58:23.568Z
                createdAt: 2024-03-16T23:58:23.568
    get:
      security: []
      summary: View scholarships
      description: Returns a list of scholarships along with its details.
      tags:
        - Scholarships
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: The id of the scholarship.
          required: false
          example: dc88cf07-7e58-45e1-9ce1-cd85434ea3df
        - in: query
          name: userId
          schema:
            type: string
          description: The id of the user who uploaded the scholarships.
          required: false
          example: af6f1a53-fd33-40b9-be41-72ba9d373195
        - in: query
          name: name
          schema:
            type: string
          description: The name/title of the scholarship.
          required: false
          example: Beasiswa Unggulan
        - in: query
          name: description
          schema:
            type: string
          description: The description of the scholarship.
          required: false
          example: beasiswa unggulan
        - in: query
          name: company
          schema:
            type: string
          description: The company of the scholarship.
          required: false
          example: Kementerian Keuangan
        - in: query
          name: benefit
          schema:
            type: string
          description: The scholarship's benefit.
          required: false
          example: Biaya Hidup
        - in: query
          name: requirement
          schema:
            type: string
          description: The scholarship's requirement.
          required: false
          example: toefl
        - in: query
          name: benefit
          schema:
            type: string
          description: The scholarship's benefit.
          required: false
          example: Biaya Hidup
        - in: query
          name: link
          schema:
            type: string
          description: The scholarship's external link.
          required: false
          example: lpdp.kemenkeu.go.id
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: The scholarship's start date.
          required: false
          example: 2024-03-19T00:00:00.000Z
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: The scholarship's end date.
          required: false
          example: 2024-03-19T00:00:00.000Z
        - in: query
          name: typeId
          schema:
            type: string
          description: The scholarship's funding type's id.
          required: false
          example: 1
        - in: query
          name: educations
          schema:
            type: string
          description: The scholarship's education's id requirement.
          required: false
          example: 1,2,3
        - in: query
          name: locations
          schema:
            type: string
          description: The scholarship's location's id requirement.
          required: false
          example: 1,2
        - in: query
          name: categories
          schema:
            type: string
          description: The scholarship's category's id requirement.
          required: false
          example: 1,2,3,4
        - in: query
          name: statusId
          schema:
            type: string
          description: The scholarship's status's id.
          required: false
          example: 2
        - in: query
          name: limit
          schema:
            type: string
          description: The limit of scholarship information that will be shown.
          required: false
          example: 10
        - in: query
          name: page
          schema:
            type: string
          description: The page of scholarship information that will be shown.
          required: false
          example: 1
        - in: query
          name: sort
          schema:
            type: string
          description: The name of attributes that will be sorted.
          required: false
          example: name
      responses:
        "200":
          description: A JSON object of user registration status and its username. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          $ref: "#/components/schemas/scholarship/properties/name"
                        description:
                          $ref: "#/components/schemas/scholarship/properties/description"
                        company:
                          $ref: "#/components/schemas/scholarship/properties/company"
                        image:
                          $ref: "#/components/schemas/scholarship/properties/image"
                        benefit:
                          $ref: "#/components/schemas/scholarship/properties/benefit"
                        requirement:
                          $ref: "#/components/schemas/scholarship/properties/requirement"
                        link:
                          $ref: "#/components/schemas/scholarship/properties/link"
                        startDate:
                          $ref: "#/components/schemas/scholarship/properties/startDate"
                        endDate:
                          $ref: "#/components/schemas/scholarship/properties/endDate"
                        educations:
                          $ref: "#/components/schemas/scholarship/properties/educations"
                        typeId:
                          $ref: "#/components/schemas/scholarship/properties/typeId"
                        locations:
                          $ref: "#/components/schemas/scholarship/properties/locations"
                        categories:
                          $ref: "#/components/schemas/scholarship/properties/categories"
              example:
                message: success
                data:
                  - id: acb16514-a17d-4dc3-a3c0-2276061382ee
                    userId: f36ec776-552a-4b7d-b7ed-177adef2fcee
                    name: Beasiswa Reguler LPDP
                    description: Beasiswa Reguler LPDP merupakan program beasiswa yang didanai oleh Lembaga Pengelola Dana Pendidikan (LPDP) Kementerian Keuangan Republik Indoneisa untuk jenjang magister dan doktor.
                    company: Kementerian Keuangan Republik Indonesia
                    image: lpdp.jpeg
                    benefit: Biaya Pendidikan, Biaya Hidup, Tunjangan Buku, Tunjangan Penelitian
                    requirement: WNI, Lulus S1/D4, IPK Minimal 3.00, Skor TOEFL Minimal 500, Surat Rekomendasi, Sehat Jasmani dan Rohani.
                    link: lpdp.kemenkeu.go.id
                    startDate: 2024-03-19T00:00:00.000Z
                    endDate: 2024-05-19T00:00:00.000Z
                    typeId: 2
                    statusId: 1
                    updatedAt: 2024-03-19T00:00:00.000Z
                    createdAt: 2024-05-19T00:00:00.000Z
                    fundingTypes:
                      id: 1
                      typeName": pemerintah
                      createdAt: 2024-03-16T07:29:17.000Z
                      updatedAt: 2024-03-16T07:29:17.000Z
                    locations:
                      - locationId: 1
                    categories:
                      - categoryId: 4
                    educations:
                      - educationLevelId: 2
                        minSemester: 1
                        maxSemester: 8
                      - educationLevelId: 3
                        minSemester: 1
                        maxSemester: 4
                    scholarshipStatus:
                      id: 1
                      statusName: pending
                      createdAt: 2024-03-16T07:29:17.000Z
                      updatedAt: 2024-03-16T07:29:17.000Z
  /scholarships/{id}:
    get:
      security: []
      summary: View scholarship by id
      description: Returns a scholarship along with its details.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique identifier of the scholarship to get
      tags:
        - Scholarships
      responses:
        "200":
          description: A JSON object of user registration status and its username. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        $ref: "#/components/schemas/scholarship/properties/name"
                      description:
                        $ref: "#/components/schemas/scholarship/properties/description"
                      company:
                        $ref: "#/components/schemas/scholarship/properties/company"
                      image:
                        $ref: "#/components/schemas/scholarship/properties/image"
                      benefit:
                        $ref: "#/components/schemas/scholarship/properties/benefit"
                      requirement:
                        $ref: "#/components/schemas/scholarship/properties/requirement"
                      link:
                        $ref: "#/components/schemas/scholarship/properties/link"
                      startDate:
                        $ref: "#/components/schemas/scholarship/properties/startDate"
                      endDate:
                        $ref: "#/components/schemas/scholarship/properties/endDate"
                      educations:
                        $ref: "#/components/schemas/scholarship/properties/educations"
                      typeId:
                        $ref: "#/components/schemas/scholarship/properties/typeId"
                      locations:
                        $ref: "#/components/schemas/scholarship/properties/locations"
                      categories:
                        $ref: "#/components/schemas/scholarship/properties/categories"
              example:
                message: success
                data:
                  id: acb16514-a17d-4dc3-a3c0-2276061382ee
                  userId: f36ec776-552a-4b7d-b7ed-177adef2fcee
                  name: Beasiswa Reguler LPDP
                  description: Beasiswa Reguler LPDP merupakan program beasiswa yang didanai oleh Lembaga Pengelola Dana Pendidikan (LPDP) Kementerian Keuangan Republik Indoneisa untuk jenjang magister dan doktor.
                  company: Kementerian Keuangan Republik Indonesia
                  image: lpdp.jpeg
                  benefit: Biaya Pendidikan, Biaya Hidup, Tunjangan Buku, Tunjangan Penelitian
                  requirement: WNI, Lulus S1/D4, IPK Minimal 3.00, Skor TOEFL Minimal 500, Surat Rekomendasi, Sehat Jasmani dan Rohani.
                  link: lpdp.kemenkeu.go.id
                  startDate: 2024-03-19T00:00:00.000Z
                  endDate: 2024-05-19T00:00:00.000Z
                  typeId: 2
                  statusId: 1
                  updatedAt: 2024-03-19T00:00:00.000Z
                  createdAt: 2024-05-19T00:00:00.000Z
                  fundingTypes:
                    id: 1
                    typeName": pemerintah
                    createdAt: 2024-03-16T07:29:17.000Z
                    updatedAt: 2024-03-16T07:29:17.000Z
                  locations:
                    - locationId: 1
                  categories:
                    - categoryId: 4
                  educations:
                    - educationLevelId: 2
                      minSemester: 1
                      maxSemester: 8
                    - educationLevelId: 3
                      minSemester: 1
                      maxSemester: 4
                  scholarshipStatus:
                    id: 1
                    statusName: pending
                    createdAt: 2024-03-16T07:29:17.000Z
                    updatedAt: 2024-03-16T07:29:17.000Z
    patch:
      tags:
        - Scholarships
      summary: Add a new scholarship
      description: Record scholarship and return it's details.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - benefit
                - requirement
                - link
                - startDate
                - endDate
                - company
                - educations
                - typeId
                - locations
                - categories
              properties:
                name:
                  $ref: "#/components/schemas/scholarship/properties/name"
                description:
                  $ref: "#/components/schemas/scholarship/properties/description"
                company:
                  $ref: "#/components/schemas/scholarship/properties/company"
                image:
                  $ref: "#/components/schemas/scholarship/properties/image"
                benefit:
                  $ref: "#/components/schemas/scholarship/properties/benefit"
                requirement:
                  $ref: "#/components/schemas/scholarship/properties/requirement"
                link:
                  $ref: "#/components/schemas/scholarship/properties/link"
                startDate:
                  $ref: "#/components/schemas/scholarship/properties/startDate"
                endDate:
                  $ref: "#/components/schemas/scholarship/properties/endDate"
                educations:
                  $ref: "#/components/schemas/scholarship/properties/educations"
                typeId:
                  $ref: "#/components/schemas/scholarship/properties/typeId"
                locations:
                  $ref: "#/components/schemas/scholarship/properties/locations"
                categories:
                  $ref: "#/components/schemas/scholarship/properties/categories"
      responses:
        "200":
          description: A JSON object containing user details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        $ref: "#/components/schemas/scholarship/properties/id"
                      statusId:
                        $ref: "#/components/schemas/scholarship/properties/statusId"
                      userId:
                        $ref: "#/components/schemas/scholarship/properties/userId"
                      name:
                        $ref: "#/components/schemas/scholarship/properties/name"
                      description:
                        $ref: "#/components/schemas/scholarship/properties/description"
                      company:
                        $ref: "#/components/schemas/scholarship/properties/company"
                      image:
                        $ref: "#/components/schemas/scholarship/properties/image"
                      benefit:
                        $ref: "#/components/schemas/scholarship/properties/benefit"
                      requirement:
                        $ref: "#/components/schemas/scholarship/properties/requirement"
                      link:
                        $ref: "#/components/schemas/scholarship/properties/link"
                      startDate:
                        $ref: "#/components/schemas/scholarship/properties/startDate"
                      endDate:
                        $ref: "#/components/schemas/scholarship/properties/endDate"
                      typeId:
                        $ref: "#/components/schemas/scholarship/properties/typeId"
                      createdAt:
                        $ref: "#/components/schemas/scholarship/properties/createdAt"
                      updatedAt:
                        $ref: "#/components/schemas/scholarship/properties/updatedAt"
              example:
                id: 4d90fff9-52fd-47a4-89cd-dc0fb57b926c
                statusId: 1,
                userId: af6f1a53-fd33-40b9-be41-72ba9d373195
                name: Beasiswa Reguler LPDP
                description: Beasiswa Reguler LPDP merupakan program beasiswa yang didanai oleh Lembaga Pengelola Dana Pendidikan (LPDP) Kementerian Keuangan Republik Indoneisa untuk jenjang magister dan doktor.
                company: Kementerian Keuangan Republik Indonesia
                image: lpdp.jpeg
                benefit: Biaya Pendidikan, Biaya Hidup, Tunjangan Buku, Tunjangan Penelitian
                requirement: WNI, Lulus S1/D4, IPK Minimal 3.00, Skor TOEFL Minimal 500, Surat Rekomendasi, Sehat Jasmani dan Rohani
                link: lpdp.kemenkeu.go.id
                startDate: 2024-12-01T00:00:00.000Z
                endDate: 2024-12-10T00:00:00.000Z
                typeId: 1
                updatedAt: 2024-03-16T23:58:23.568Z
                createdAt: 2024-03-16T23:58:23.568

  /scholarhips/{id}/accept:
    post:
      summary: Accept scholarship by scholarship's id
      description: Returns a accept status along with its details.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique identifier of the scholarship to accept
      tags:
        - Scholarships
        - Admins
      responses:
        "200":
          description: A JSON object containing scholarship details. (Successful Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      scholarshipId:
                        $ref: "#/components/schemas/scholarship/properties/id"
              example:
                message: success
                data:
                  scholarshipId: 3c71e4a6-a4e9-462f-b1ea-cc98fc37ec46
        "401":
          description: Insufficient privilege (Unauthorized Response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error
                  data:
                    type: string
                    example: Insufficient privilege

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the user.
        name:
          type: string
          description: The user's name.
        username:
          type: string
          description: The user's username.
        password:
          type: string
          description: The user's password.
        contact:
          type: string
          description: The user's contact.
        email:
          type: string
          description: The user's email.
        description:
          type: string
          description: The user's description.
        birthDate:
          type: string
          format: date-time
          description: The user's birth date.
        gender:
          type: string
          description: The user's gender.
        address:
          type: string
          description: The user's address.
        image:
          type: string
          format: binary
          description: The user's profile image.
        roleId:
          type: string
          description: The user's role's id.
        statusId:
          type: string
          description: The user's status's id. Referring to account activation status.
        otp:
          type: integer
          description: The user's otp.
        createdAt:
          type: string
          format: date-time
          description: The user's creation date.
        updatedAt:
          type: string
          format: date-time
          description: The user's latest update date.

    scholarship:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the scholarship.
        userId:
          type: string
          description: The unique identifier of the user who upload the scholarship.
        name:
          type: string
          description: The scholarship's name.
        description:
          type: string
          description: The scholarship's description.
        company:
          type: string
          description: The scholarship's company.
        image:
          type: string
          format: binary
          description: The scholarship's image.
        benefit:
          type: string
          description: The scholarship's benefit.
        requirement:
          type: string
          description: The scholarship's requirement.
        link:
          type: string
          description: The scholarship's external link.
        startDate:
          type: string
          format: date-time
          description: The Scholarship's start date.
        endDate:
          type: string
          format: date-time
          description: The Scholarship's end date.
        educations:
          type: array
          description: The scholarship's education's id.
          items:
            type: object
            properties:
              educationLevelId:
                type: integer
              minSemester:
                type: integer
              maxSemester:
                type: integer
        typeId:
          type: integer
          description: The scholarship's type's id.
        locations:
          type: array
          description: The scholarship's location's id.
          items:
            type: object
            properties:
              locationId:
                type: integer
        categories:
          type: array
          description: The scholarship's category's id.
          items:
            type: object
            properties:
              categoryId:
                type: integer
        statusId:
          type: integer
          description: The scholarship's status's id.
        createdAt:
          type: string
          format: date-time
          description: The scholarship's creation date.
        updatedAt:
          type: string
          format: date-time
          description: The scholarship's latest update date.
